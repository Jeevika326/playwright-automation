image: gitpod/workspace-node

tasks:
  - name: Install Dependencies & Setup
    init: |
      # Install Node dependencies
      npm install
      
      # Clean any existing Playwright installations
      rm -rf ~/.cache/ms-playwright/
      
      # Install Playwright
      npm install -D @playwright/test
      
      # Install browsers one by one and verify installation
      echo "Installing Chromium..."
      npx playwright install chromium
      
      echo "Installing Firefox..."
      npx playwright install firefox
      
      echo "Installing WebKit..."
      npx playwright install webkit
      
      # Install browser dependencies
      echo "Installing browser dependencies..."
      npx playwright install-deps
      
      # Verify browser installations
      echo "Verifying browser installations..."
      npx playwright install --help
      
      # Create necessary directories
      mkdir -p playwright-report test-results

    command: |
      # Load environment variables from .env
      if [ -f ".env" ]; then
        set -a
        source .env
        set +a
        echo "✅ Loaded credentials from .env file"
      else
        echo "⚠️  No .env file found"
      fi

  - name: Verify Browser Installation
    command: |
      echo "Checking browser installations..."
      
      # List installed browsers
      npx playwright install --help
      
      # Try launching each browser to verify installation
      echo "Testing browser launches..."
      node -e "const { chromium } = require('@playwright/test'); (async () => { const browser = await chromium.launch(); await browser.close(); console.log('✅ Chromium launch test successful'); })().catch(e => { console.error('❌ Chromium launch failed:', e); process.exit(1); })"
      node -e "const { firefox } = require('@playwright/test'); (async () => { const browser = await firefox.launch(); await browser.close(); console.log('✅ Firefox launch test successful'); })().catch(e => { console.error('❌ Firefox launch failed:', e); process.exit(1); })"
      node -e "const { webkit } = require('@playwright/test'); (async () => { const browser = await webkit.launch(); await browser.close(); console.log('✅ WebKit launch test successful'); })().catch(e => { console.error('❌ WebKit launch failed:', e); process.exit(1); })"

  - name: Run Tests & Generate Report
    command: |
      echo "Starting Playwright tests..."
      
      # Ensure browsers are installed before running tests
      npx playwright install
      
      # Run the tests
      npx playwright test
      
      # Generate and open the HTML report
      npx playwright show-report
      
      # Create a timestamp for the report archive
      TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
      
      # Archive the test results and reports
      mkdir -p test-archives
      zip -r "test-archives/test-run-${TIMESTAMP}.zip" playwright-report/* test-results/*
      
      echo "🎯 Test execution completed!"
      echo "📊 HTML Report is available in playwright-report/"
      echo "📁 Test archive created: test-archives/test-run-${TIMESTAMP}.zip"
      
      # Display test summary
      echo "Test Summary:"
      grep "test" playwright-report/index.html | grep -o "Passed:[^<]*\|Failed:[^<]*\|Skipped:[^<]*"

vscode:
  extensions:
    - "ms-playwright.playwright"
    - "dbaeumer.vscode-eslint"
    - "esbenp.prettier-vscode"
    - "github.vscode-pull-request-github"
    - "eamodio.gitlens"
    - "ms-vscode.vscode-typescript-tslint-plugin"
    - "christian-kohler.npm-intellisense"

ports:
  - port: 9323
    onOpen: ignore
  - port: 3000
    onOpen: ignore
  - port: 9222
    onOpen: ignore
    visibility: public
  - port: 443
    onOpen: ignore
    visibility: public
